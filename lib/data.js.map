{"version":3,"sources":["data.js"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["'use strict';\nimport Pipeline from '@hoist/data-pipeline';\nimport errors from '@hoist/errors';\nimport Bluebird from 'bluebird';\nimport BaseAPI from './base_api';\n\nclass DataAPI extends BaseAPI {\n  constructor(type) {\n    super();\n    if (type) {\n      this.setType(type);\n    }\n    this._pipeline = new Pipeline();\n  }\n  _verify() {\n    return Promise.resolve().then(() => {\n      if (!this._type) {\n        throw new errors.data.request.InvalidError('you need to specify a type for the retrieval, call #setType([typename]) first');\n      }\n    });\n  };\n  setType(type) {\n    this._type = type.toLowerCase();\n  }\n  find(query, callback) {\n    return Bluebird.resolve(\n        this._verify()\n        .then(() => {\n          return this._pipeline.find(this._type, query || {});\n        }))\n      .nodeify(callback);\n  }\n  findById(id, callback) {\n    return Bluebird.resolve(\n        Promise.resolve()\n        .then(() => {\n          if (!id) {\n            throw new errors.data.request.InvalidError('you need to specify an id for #findById');\n          }\n        })\n        .then(() => {\n          return this.findOne({\n            _id: id\n          });\n        }))\n      .nodeify(callback);\n  }\n  findOne(query, callback) {\n    return Bluebird.resolve(\n        Promise.resolve()\n        .then(() => {\n          if (!query) {\n            throw new errors.data.request.InvalidError('you need to specify a query for #findOne');\n          }\n        })\n        .then(() => {\n          return this._verify();\n        })\n        .then(() => {\n          return this._pipeline.findOne(this._type, query);\n        }))\n      .nodeify(callback);\n  }\n  remove(query, callback) {\n    return Bluebird.resolve(\n        Promise.resolve()\n        .then(() => {\n          if (!query) {\n            throw new errors.data.request.InvalidError('you need to specify a query for #remove');\n          }\n        })\n        .then(() => {\n          return this._verify();\n        })\n        .then(() => {\n          return this._pipeline.remove(this._type, query);\n        }))\n      .nodeify(callback);\n  }\n  removeOneById(id, callback) {\n    return Bluebird.resolve(\n        Promise.resolve()\n        .then(() => {\n          if (!id) {\n            throw new errors.data.request.InvalidError('you need to specify an id for #removeOneById');\n          }\n        })\n        .then(() => {\n          return this._verify();\n        })\n        .then(() => {\n          return this._pipeline.remove(this._type, {\n            _id: id\n          });\n        }))\n      .nodeify(callback);\n  }\n  save(json, callback) {\n    if (!this._type && json._type) {\n      this.setType(json._type);\n    }\n    return Bluebird.resolve(\n      this._verify()\n      .then(() => {\n        return this._pipeline.save(this._type, json);\n      })).nodeify(callback);\n  }\n}\n\n\nexport default DataAPI;\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["events.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;mCACQ,wBAAwB;;;;sBAIxC,QAAQ;;wBACQ,UAAU;;;;wBACX,YAAY;;;;4BACZ,gBAAgB;;;;;;;;IAK9B,SAAS;YAAT,SAAS;;;;;;AAIF,WAJP,SAAS,GAIC;0BAJV,SAAS;;AAKX,+BALE,SAAS,6CAKH;AACR,QAAI,CAAC,SAAS,GAAG,sCAAc,CAAC;GACjC;;;;;;;;;;;eAPG,SAAS;;WAiBR,eAAC,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE;;;AAC9C,UAAI,CAAC,QAAQ,IAAI,YA5BnB,UAAU,EA4BoB,eAAe,CAAC,EAAE;AAC5C,gBAAQ,GAAG,eAAe,CAAC;AAC3B,uBAAe,GAAG,IAAI,CAAC;OACxB;AACD,UAAI,CAAC,QAAQ,IAAI,YAhCnB,UAAU,EAgCoB,OAAO,CAAC,EAAE;AACpC,gBAAQ,GAAG,OAAO,CAAC;AACnB,eAAO,GAAG,EAAE,CAAC;OACd;AACD,aAAO,sBAAS,OAAO,CACrB,0BAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AAC9B,eAAO,MAAK,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;OACtE,CAAC,CACH,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACrB;;;SA/BG,SAAS;;;qBAkCA,SAAS","file":"events.js","sourcesContent":["'use strict';\nimport Pipeline from '@hoist/events-pipeline';\nimport {\n  isFunction\n}\nfrom 'lodash';\nimport Bluebird from 'bluebird';\nimport BaseAPI from './base_api';\nimport Context from '@hoist/context';\n\n/**\n * Hoists event API\n */\nclass EventsAPI extends BaseAPI {\n  /**\n   * create a new instance of the event api\n   */\n  constructor() {\n    super();\n    this._pipeline = new Pipeline();\n  }\n\n  /**\n   * raise a new event\n   * @param {string} name - the name of the event\n   * @param {object} payload - the event payload\n   * @param {object} [contextOverride] - overides for the current context\n   * @param {function(error: Error, objects: Event)} [callback] - callback to call when event has been raised\n   * @returns {Promise<Event>} - a promise to have raised the Event\n   */\n  raise(name, payload, contextOverride, callback) {\n    if (!callback && isFunction(contextOverride)) {\n      callback = contextOverride;\n      contextOverride = null;\n    }\n    if (!callback && isFunction(payload)) {\n      callback = payload;\n      payload = {};\n    }\n    return Bluebird.resolve(\n      Context.get().then((context) => {\n        return this._pipeline.raise(context, name, payload, contextOverride);\n      })\n    ).nodeify(callback);\n  }\n}\n\nexport default EventsAPI;\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["connector.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;2BACM,eAAe;;;;sCACb,2BAA2B;;;;wBAC5B,YAAY;;;;IAE1B,YAAY;AACL,WADP,YAAY,CACJ,GAAG,EAAE;0BADb,YAAY;;AAEd,+BAFE,YAAY,6CAEN;AACR,QAAI,CAAC,GAAG,EAAE;AACR,YAAM,IAAI,yBAAO,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;KACnD;AACD,QAAI,CAAC,SAAS,GAAG,yCAAc,CAAC;AAChC,QAAI,CAAC,IAAI,GAAG,GAAG,CAAC;GACjB;;YARG,YAAY;;eAAZ,YAAY;;WASF,0BAAG;AACf,aAAO,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,AAAC,CAAC;KACvF;;;WACE,eAAG;;;AACJ,UAAI,OAAO,GAAG,SAAS,CAAC;AACxB,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAK;AACrC,eAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;OAChC,CAAC,SAAM,CAAC,UAAC,GAAG,EAAK;AAChB,cAAK,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,cAAM,GAAG,CAAC;OACX,CAAC,CAAC;KACJ;;;WACE,eAAG;;;AACJ,UAAI,OAAO,GAAG,SAAS,CAAC;AACxB,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAK;AACrC,eAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;OAChC,CAAC,SAAM,CAAC,UAAC,GAAG,EAAK;AAChB,eAAK,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,cAAM,GAAG,CAAC;OACX,CAAC,CAAC;KACJ;;;WACG,gBAAG;;;AACL,UAAI,QAAQ,GAAG,SAAS,CAAC;AACzB,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAK;AACrC,eAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;OAClC,CAAC,SAAM,CAAC,UAAC,GAAG,EAAK;AAChB,eAAK,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,cAAM,GAAG,CAAC;OACX,CAAC,CAAC;KACJ;;;WACK,mBAAG;;;AACP,UAAI,UAAU,GAAG,SAAS,CAAC;AAC3B,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAK;AACrC,eAAO,CAAC,UAAO,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;OACtC,CAAC,SAAM,CAAC,UAAC,GAAG,EAAK;AAChB,eAAK,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,cAAM,GAAG,CAAC;OACX,CAAC,CAAC;KACJ;;;WACQ,mBAAC,KAAK,EAAE,QAAQ,EAAE;;;AACzB,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAK;AACrC,eAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;OAC3B,CAAC,CAAC,IAAI,CAAC,YAAM;AACZ,sBAAY;OACb,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACtB;;;SAtDG,YAAY;;;qBAyDH,YAAY","file":"connector.js","sourcesContent":["'use strict';\nimport errors from '@hoist/errors';\nimport Pipeline from '@hoist/connector-pipeline';\nimport BaseAPI from './base_api';\n\nclass ConnectorAPI extends BaseAPI {\n  constructor(key) {\n    super();\n    if (!key) {\n      throw new errors.connector.request.InvalidError();\n    }\n    this._pipeline = new Pipeline();\n    this._key = key;\n  }\n  _loadConnector() {\n    return this._connector || (this._connector = this._pipeline.loadConnector(this._key));\n  }\n  get() {\n    var getArgs = arguments;\n    return this._loadConnector.then((c) => {\n      return c.get.apply(c, getArgs);\n    }).catch((err) => {\n      this._logger.error(err);\n      throw err;\n    });\n  }\n  put() {\n    var putArgs = arguments;\n    return this._loadConnector.then((c) => {\n      return c.put.apply(c, putArgs);\n    }).catch((err) => {\n      this._logger.error(err);\n      throw err;\n    });\n  }\n  post() {\n    var postArgs = arguments;\n    return this._loadConnector.then((c) => {\n      return c.post.apply(c, postArgs);\n    }).catch((err) => {\n      this._logger.error(err);\n      throw err;\n    });\n  }\n  delete() {\n    var deleteArgs = arguments;\n    return this._loadConnector.then((c) => {\n      return c.delete.apply(c, deleteArgs);\n    }).catch((err) => {\n      this._logger.error(err);\n      throw err;\n    });\n  }\n  authorize(token, callback) {\n    return this._loadConnector.then((c) => {\n      return c.authorize(token);\n    }).then(() => {\n      return this;\n    }).nodeify(callback);\n  }\n}\n\nexport default ConnectorAPI;\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["connector.js"],"names":[],"mappings":"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","file":"connector.js","sourcesContent":["'use strict';\nimport errors from '@hoist/errors';\nimport Pipeline from '@hoist/connector-pipeline';\nimport BaseAPI from './base_api';\nimport {\n  filter, functions\n}\nfrom 'lodash';\nimport logger from '@hoist/logger';\nimport Bluebird from 'bluebird';\n/**\n * Hoists API wrapper around connectors\n */\nclass ConnectorAPI extends BaseAPI {\n  /**\n   * create a new connector API\n   * @param {string} key - the connector key\n   */\n  constructor(key) {\n    super();\n    this._logger = logger.child({\n      cls: this.constructor.name\n    });\n    if (!key) {\n      throw new errors.connector.request.InvalidError();\n    }\n    this._pipeline = new Pipeline();\n    this._key = key;\n    this._loadConnector();\n  }\n  _loadConnector() {\n    if (!this._connector) {\n      this._connector = this._pipeline.loadConnector(this._key).then((c) => {\n\n        let methods = filter(functions(c), (property) => {\n\n          if (property.startsWith('_') || property === 'receiveBounce' || this[property]) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        //we should always show the rest params but they might return an error\n        methods = methods.concat(['get', 'post', 'put', 'delete', 'authorize']);\n        methods.forEach((method) => {\n          /**\n           * also has all methods of underlying connector\n           */\n          let _this = this;\n          this[method] = function (...params) {\n            _this._logger.info('proxying method ' + method);\n            if (typeof c[method] !== 'function') {\n              var methodType = typeof c[method];\n              _this._logger.warn({\n                methodType: methodType,\n                typeof: c\n              }, 'tried to call an unsupported method');\n              throw new errors.connector.request.UnsupportedError(method + ' method unsupported');\n            }\n            let callback;\n            if (typeof (params[params.length - 1]) === 'function') {\n              callback = params.pop();\n            }\n            return Bluebird.resolve(c[method].apply(c, params))\n              .nodeify(callback);\n          };\n        });\n      });\n\n    }\n    return this._connector;\n  }\n  init() {\n    return this._loadConnector();\n  }\n  get(...params) {\n    return this._loadConnector()\n      .then(() => {\n        return this.get.apply(this, params);\n      });\n  }\n  put(...params) {\n    return this._loadConnector()\n      .then(() => {\n        return this.put.apply(this, params);\n      });\n\n  }\n  post(...params) {\n    return this._loadConnector()\n      .then(() => {\n        return this.post.apply(this, params);\n      });\n  }\n  delete(...params) {\n    return this._loadConnector()\n      .then(() => {\n        return this.delete.apply(this, params);\n      });\n  }\n  authorize(...params) {\n    return this._loadConnector()\n      .then(() => {\n        return this.authorize.apply(this, params);\n      });\n  }\n}\n\nexport default ConnectorAPI;\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAI,QAAQ;AACV,QAAM,cAAU,IAAV,EAAgB;AACpB,WAAO,mBAAY,IAAZ,CAAP,CADoB;GAAhB;AAGN,QAAM,oBAAN;AACA,UAAQ,sBAAR;AACA,aAAW,mBAAU,GAAV,EAAe;AACxB,WAAO,wBAAiB,GAAjB,CAAP,CADwB;GAAf;AAGX,oBATU;AAUV,QAAM,SAAS,UAAT,CAAoB,IAApB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C;AACjD,QAAI,YAAY,oBAAZ,CAD6C;AAEjD,QAAI,CAAC,QAAD,IAAa,wBAAW,OAAX,CAAb,EAAkC;AACpC,iBAAW,OAAX,CADoC;AAEpC,gBAAU,IAAV,CAFoC;KAAtC;AAIA,WAAO,mBAAS,OAAT,CAAiB,UAAU,UAAV,CAAqB,IAArB,EAA2B,OAA3B,CAAjB,EACJ,OADI,CACI,QADJ,CAAP,CANiD;GAA7C;AASN,WAAS,uBAAT;AACA,4BApBU;AAqBV,yBArBU;AAsBV,UAAQ,sBAAR;CAtBE;;AAyBJ,MAAM,IAAN,CAAW,QAAX,GAAsB,YAAY;AAChC,SAAO,eAAQ,UAAR,EAAP,CADgC;CAAZ;;AAItB,MAAM,KAAN,GAAc,MAAM,MAAN;;kBAEC","file":"index.js","sourcesContent":["'use strict';\nimport {\n  isFunction\n}\nfrom 'lodash';\nimport LockAPI from './lock';\nimport Bluebird from 'bluebird';\nimport DataAPI from './data';\nimport UserAPI from './user';\nimport EventsAPI from './events';\nimport ConnectorAPI from './connector';\nimport log from './log';\nimport TimeoutAPI from './timeout';\nimport Context from '@hoist/context';\nimport Model from '@hoist/model';\nimport BucketAPI from './bucket';\nlet index = {\n  data: function (type) {\n    return new DataAPI(type);\n  },\n  user: new UserAPI(),\n  events: new EventsAPI(),\n  connector: function (key) {\n    return new ConnectorAPI(key);\n  },\n  log: log,\n  lock: function CreateLock(name, timeout, callback) {\n    let hoistLock = new LockAPI();\n    if (!callback && isFunction(timeout)) {\n      callback = timeout;\n      timeout = null;\n    }\n    return Bluebird.resolve(hoistLock.aquireLock(name, timeout))\n      .nodeify(callback);\n  },\n  timeout: new TimeoutAPI(),\n  Context: Context,\n  _model: Model,\n  bucket: new BucketAPI()\n};\n\nindex.data._cleanup = function () {\n  return DataAPI.disconnect();\n};\n\nindex.event = index.events;\n\nexport default index;\n"],"sourceRoot":"/source/"}